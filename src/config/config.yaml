# config.yaml

# Used in: prepare_dataset.py 
preprocess: # Used in: Prepare_dataset.py 
  path: "data/raw/dataset"
  json_path: "data/processed/data.json"
  test_size: 0.2
  validation_size: 0.2
  n_mfcc: 13
  n_fft: 2048
  hop_length: 512 # 512 for latency reasons - can reduce to improve model 
  sample_rate: 22050 # 1 second worth of loading audio with librosa is 22050 samples/second
  window_size: 0.25 # 0.25 seconds

# Used in: train_model.py  
training: 
  train_path: "data/processed/data_train.json"
  test_path: "data/processed/data_test.json"
  validation_path: "data/processed/data_validation.json"
  loss:
    class: tf.losses.BinaryCrossentropy
    params:
      from_logits: true
  learning_rate: 0.0001
  epochs: 40 
  batch_size: 32 # Number of samples before running back prop or learning step 
  patience: 5
  threshold: 0.7 # Threshhold for Sigmoid Predictions
  saved_model_path: "models/model.keras"
  
# to do: hyper param optimiszation -> data aug -> more performance metrics 

# used in predict_model.py
predictions:
  data_path: 
    music: "data/raw/prediction_data/music_predict/music_predict.wav"
    speech: "data/raw/prediction_data/speech_predict/speech_predict.wav"
  saved_model_path: "models/model.keras"
  samples_to_consider: 22050
  n_mfcc: 13
  n_fft: 2048
  hop_length: 512 # 512 for latency reasons - can reduce to improve model 
  sample_rate: 22050 # 1 second worth of loading audio with librosa is 22050 samples/second
  window_size: 0.25 # 0.25 seconds
  threshold: 0.7 # Threshhold for Sigmoid Predictions

# used in audio_input.py
real_time:
  channels: 1
  sample_rate: 22050
  window_size: 0.25 # 0.25seconds
  wave_output_filename: "output.wav" # saves input into audio_input as .wav file
  prediction_csv: "predictions.csv"
  silence_threshold: 200 # what sound amplitude we define as 'silent'
